buildscript {
    ext.kotlin_version = '1.2.30'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.30'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile(
            'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.30',
            'org.jetbrains.kotlin:kotlin-reflect:1.2.30',
            'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5',
            'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.3',
            'com.amazonaws:aws-lambda-java-core:1.1.0',
            'com.amazonaws:aws-lambda-java-events:1.1.0',
            'com.amazonaws:aws-java-sdk:1.11.275'
    )
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task buildZip(type: Zip) {
    from compileJava
    from compileKotlin
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

task buildDocker(type: Copy) {
    from compileJava
    from compileKotlin
    from processResources
    into('lib') {
        from configurations.runtime
    }
    into 'build/docker'
}

build.dependsOn buildDocker
